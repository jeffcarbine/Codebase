:root {
  --btn-border-radius: var(--border-radius);

  --btn-background: var(--primary);
  --btn-color: var(--light);
  --btn-focus-background: var(--primary-dark);
  --btn-focus-color: var(--light);

  --btn-font-weight: 400;
  --btn-font-size: var(--f9-font-size);
  --btn-line-height: var(--f9-line-height);
  --btn-padding-x: 0.75rem;
  --btn-padding-y: 1rem;

  --btn-container-space: 0.5rem;

  --btn-icon-size: 0.75rem;
}

button.btn {
  outline: none;
  cursor: pointer;
}

.btn {
  --loader-color: var(--btn-color);

  outline: none;
  padding: var(--btn-padding-x) var(--btn-padding-y);
  border: 1px solid var(--btn-background);
  transition: background 0.25s ease, border-color 0.25s ease, color 0.25s ease;
  font-size: inherit;
  text-decoration: none;
  line-height: var(--btn-line-height);
  display: inline-block;
  font-weight: var(--btn-font-weight);
  font-family: unset; // override browser defaults and listen to the body
  margin: 0.25rem 0;
  background: var(--btn-background);
  color: var(--btn-color);
  border-radius: var(--btn-border-radius);
  cursor: pointer;
  box-sizing: border-box;
  position: relative;

  &.loading {
    min-height: 0; // don't subscribe to loading min-heights

    > span {
      opacity: 0.25;
    }

    &::after {
      transform: translate(-50%, -50%) scale(0.2);
    }
  }

  svg.icon {
    width: var(--btn-icon-size);
    height: var(--btn-icon-size);
    fill: var(--btn-color);
    transform: translateY(-6%) scale(2.5);
    margin-right: var(--btn-icon-size);
    transition: fill 0.25s ease;
  }

  &.sm {
    @include fontValues(12);
    padding: calc(var(--btn-padding-x) * 0.75) calc(var(--btn-padding-y) * 0.75);

    svg.icon {
      width: calc(var(--btn-icon-size) * 0.5);
      height: calc(var(--btn-icon-size) * 0.5);
      transform: translateY(-30%) scale(2.5);
    }
  }

  // hover is enabled in the breakpoint-md
  &:focus,
  &.active {
    background: var(--btn-focus-background);
    color: var(--btn-focus-color);
    border-color: var(--btn-focus-background);

    svg.icon {
      fill: var(--btn-focus-color);
    }
  }

  &.outline {
    background: transparent;
    color: var(--btn-background);

    &:focus {
      background: var(--btn-background);
      border-color: var(--btn-background);
      color: var(--btn-color);
    }
  }

  &.accent {
    --btn-background: var(--accent);
    --btn-focus-background: var(--accent-dark);
    --btn-color: var(--accent-on);
    --btn-focus-color: var(--accent-on);
  }

  &.subtle {
    --btn-background: var(--background-mid);
    --btn-focus-background: var(--background-grey);
    --btn-color: var(--foreground);
    --btn-focus-color: var(--foreground);
  }

  &.urgent {
    --btn-background: var(--urgent);
    --btn-focus-background: var(--urgent-dark);
    --btn-color: var(--light);
    --btn-focus-color: var(--light);
  }

  &.caution {
    --btn-background: var(--caution);
    --btn-focus-background: var(--caution-dark);
    --btn-color: var(--light);
    --btn-focus-color: var(--light);
  }

  &.success {
    --btn-background: var(--success);
    --btn-focus-background: var(--success-dark);
    --btn-color: var(--light);
    --btn-focus-color: var(--light);
  }

  &.transparent {
    --btn-background: transparent;
    --btn-color: var(--foreground);
  }

  &.icon-only {
    --btn-padding-x: 0.5rem;
    --btn-padding-y: 0.5rem;

    display: flex;
    flex-direction: column;
    justify-content: center;

    > span {
      width: 2rem;
      height: 2rem;
    }

    svg.icon {
      width: 2rem;
      height: 2rem;
      transform: none;
      margin: 0;
    }
  }

  // arrow btns
  &.arrow {
    padding-right: calc(var(--btn-padding-y) + 1rem) !important;

    &::after {
      content: "";
      display: block;
      width: 0.375rem;
      height: 0.375rem;
      border-right: 2px solid var(--btn-color);
      border-bottom: 2px solid var(--btn-color);
      border-radius: 1px;
      position: absolute;
      top: 50%;
      right: 0.75rem;
      transform: translateY(-50%) rotate(-45deg);
    }
  }

  // this is used to vertically align the text/icons better within the button
  > span {
    display: block;
    position: relative;
    z-index: 2;
  }

  // &.loading {
  //   color: var(--btn-background);
  //   --btn-focus-color: var(--btn-background);
  //   --btn-focus-background: var(--btn-background);

  //   span {
  //     opacity: 0;
  //   }

  //   svg.icon {
  //     opacity: 0;
  //   }
  // }

  // &.block {
  //   display: block;
  //   width: 100%;
  // }
}

// .radioLabel,
// .checkboxLabel {
//   &.btn {
//     input {
//       visibility: hidden;
//       position: absolute;
//       pointer-events: none;
//       width: 1px;
//       height: 1px;
//     }

//     label {
//       width: 100%;
//       height: 100%;
//     }
//   }
// }

.btn-container {
  margin: 1rem 0;
  display: flex;
  flex-wrap: wrap;

  &.centered {
    justify-content: center;
  }

  &.right {
    justify-content: flex-end;
  }

  &.minimal {
    margin: 0;
  }

  > .btn {
    width: auto;
    max-width: calc(100% - 1rem);

    &:nth-child(n + 2) {
      margin-left: var(--btn-container-space);
    }
  }
}

@media only screen and (min-width: $breakpoint-md) {
  .btn {
    &:hover {
      background: var(--btn-focus-background);
      color: var(--btn-focus-color);
      border-color: var(--btn-focus-background);

      svg.icon {
        fill: var(--btn-focus-color);
      }
    }

    &.outline {
      &:hover {
        background: var(--btn-background);
        border-color: var(--btn-background);
        color: var(--btn-color);
      }
    }
  }
}
