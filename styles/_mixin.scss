//////////////
// BREAKPOINTS
//////////////

$breakpoint-sm: 330px;
$breakpoint-md: 813px;
$breakpoint-lg: 1024px;
$breakpoint-xl: 1400px;

// so we can access them
// via getComputedStyles in JS
:root {
  --breakpoint-sm: $breakpoint-sm;
  --breakpoint-md: $breakpoint-md;
  --breakpoint-lg: $breakpoint-lg;
  --breakpoint-xl: $breakpoint-xl;
}

@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin absolute-center-left {
  position: absolute;
  top: 50%;
  left: 0;
  transform: translateY(-50%);
}

@mixin absolute-center-right {
  position: absolute;
  top: 50%;
  right: 0;
  transform: translateY(-50%);
}

@mixin absolute-center-y {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
}

@mixin hide-scrollbar {
  /*FireFox*/
  scrollbar-width: none;
  /*IE10+*/
  -ms-overflow-style: -ms-autohiding-scrollbar;

  &::-webkit-scrollbar {
    /*Chrome, Safari, Edge*/
    display: none;
  }
}

@mixin display-flex($flex-direction) {
  display: -webkit-box; /* OLD - iOS 6-, Safari 3.1-6 */
  display: -ms-flexbox; /* TWEENER - IE 10 */
  display: -webkit-flex; /* NEW - Chrome */
  display: flex; /* NEW, Spec - Opera 12.1, Firefox 20+ */
  -webkit-flex-direction: $flex-direction;
  -ms-flex-direction: $flex-direction;
  flex-direction: $flex-direction;
}

@mixin flex($flex-grow, $flex-shrink, $flex-basis) {
  -webkit-box-flex: $flex-grow; /* OLD - iOS 6-, Safari 3.1-6 */
  -moz-box-flex: $flex-grow; /* OLD - Firefox 19- */
  width: $flex-basis; /* For old syntax, otherwise collapses. */
  -webkit-flex: $flex-grow; /* Chrome */
  -ms-flex: $flex-grow; /* IE 10 */
  flex: $flex-grow $flex-shrink $flex-basis;
}

/// Returns the opposite direction of each direction in a list
/// @author Kitty Giraudel
/// @param {List} $directions - List of initial directions
/// @return {List} - List of opposite directions
@function opposite-direction($directions) {
  $opposite-directions: ();
  $direction-map: (
    "top": "bottom",
    "right": "left",
    "bottom": "top",
    "left": "right",
    "center": "center",
    "ltr": "rtl",
    "rtl": "ltr",
  );

  @each $direction in $directions {
    $direction: to-lower-case($direction);

    @if map-has-key($direction-map, $direction) {
      $opposite-directions: append(
        $opposite-directions,
        unquote(map-get($direction-map, $direction))
      );
    } @else {
      @warn "No opposite direction can be found for `#{$direction}`. Direction omitted.";
    }
  }

  @return $opposite-directions;
}

@mixin triangle($direction, $color: currentcolor, $size: 1rem, $multiplier: 1.5) {
  display: block;
  border-#{opposite-direction($direction)}: $size * $multiplier solid $color;
  border-#{$direction}: none;
  $perpendicular-border: $size solid transparent;

  @if $direction == top or $direction == bottom {
    border-left: $perpendicular-border;
    border-right: $perpendicular-border;
  } @else if $direction == right or $direction == left {
    border-bottom: $perpendicular-border;
    border-top: $perpendicular-border;
  }
}
